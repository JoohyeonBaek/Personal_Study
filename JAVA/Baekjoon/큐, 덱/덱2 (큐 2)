import java.util.*;
import java.io.*;

class Queue {
	StringBuilder sb = new StringBuilder();
	ArrayList<Integer>queue = new ArrayList<Integer>();	
	
	void push(int n) {
		queue.add(n);
	}	
	
	void pop() {
		
		if(queue.size()==0)
			sb.append("-1\n");
		else {
			sb.append(queue.get(0)+"\n");			
			queue.remove(0);
		}			
	}
	
	void size() {
		sb.append(queue.size()+"\n");		
	}
	
	void empty() {
		if(queue.size()==0)
			sb.append("-1\n");
		else
			sb.append("0\n");
	}
	
	void front() {
		if(queue.size()==0)
			sb.append("-1\n");
		else
			sb.append(queue.get(0)+"\n");
		
	}
	
	void back() {
		if(queue.size()==0)
			sb.append("-1\n");
		else
			sb.append(queue.get(queue.size()-1)+"\n");			
	}
	
	
	
}


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		
		Queue queue = new Queue();
		
		
		for(int i=0; i<n; i++) {
			String[] command = br.readLine().split(" ");
						
			if(command[0].equals("push"))
				queue.push(Integer.parseInt(command[1]));
			else if(command[0].equals("pop"))
				queue.pop();
			else if(command[0].equals("size"))
				queue.size();
			else if(command[0].equals("empty"))
				queue.empty();
			else if(command[0].equals("front"))
				queue.front();
			else if(command[0].equals("back"))
				queue.back();			
		}
		
		System.out.println(queue.sb.toString());
		
	}
}
