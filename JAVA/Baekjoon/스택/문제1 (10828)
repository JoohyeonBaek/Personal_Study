//https://www.acmicpc.net/problem/10828
/*
정수를 저장하는 스택을 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.

명령은 총 다섯 가지이다.

push X: 정수 X를 스택에 넣는 연산이다.
pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
size: 스택에 들어있는 정수의 개수를 출력한다.
empty: 스택이 비어있으면 1, 아니면 0을 출력한다.
top: 스택의 가장 위에 있는 정수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
*/
#include<stdio.h>
#include<string.h>

typedef struct stack{   //stack 구조체
	int arr[10000];
	int top;
}Stack;

void ClearStack(Stack * pstack)  //stack 초기설정
{	
	pstack->top=-1;
	memset(pstack->arr,NULL,sizeof(pstack->arr));
}

void Push(Stack * pstack,int data) //stack 데이터 삽입
{
	pstack->top+=1;
	pstack->arr[pstack->top]=data;
}

void Pop(Stack * pstack) // stack 데이터 추출
{
	if(pstack->top==-1)
	{
		printf("-1\n");
		return;
	}	
	else
		printf("%d\n",pstack->arr[pstack->top]);
		pstack->arr[pstack->top]=NULL;
		pstack->top-=1;
}

void Empty(Stack * pstack) // stack내 데이터유무 검사
{
	if(pstack->top==-1)
		printf("1\n");
	else
		printf("0\n");
}

void Top(Stack * pstack) // stack의 top 출력
{
	if(pstack->top==-1)
		printf("-1\n");
	else
		printf("%d\n",pstack->arr[pstack->top]);
}

void Size(Stack * pstack) //스택에 존재하는 데이터 개수
{
	printf("%d\n",(pstack->top)+1);
}

int main()
{
	Stack stack;
	int command_repeat,data;
	char command[10];
	
	ClearStack(&stack);
	scanf("%d",&command_repeat);

	for(int i=0;i<command_repeat;i++)
	{
		scanf("%s",command);
		
		if(!strcmp(command,"push"))
		{
			scanf("%d",&data);
			Push(&stack,data);
		}
		else if(!strcmp(command,"pop"))
			Pop(&stack);
		else if(!strcmp(command,"empty"))
			Empty(&stack);
		else if(!strcmp(command,"top"))
			Top(&stack);
		else if(!strcmp(command,"size"))
			Size(&stack);
	}

	return 0;
}
